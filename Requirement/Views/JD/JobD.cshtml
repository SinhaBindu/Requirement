@model Requirement.Models.JD_Model
@using Requirement.Manager

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Job Description Form";
}

<div class="page-bread page-titles">
    <div class="bread-flex">
        <h1>@ViewBag.Title</h1>
        <ol class="breadcrumb"></ol>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h5 class="text-center">JOB DESCRIPTION MASTER</h5>

                @using (Html.BeginForm("JobD", "JD", FormMethod.Post, new { @id = "formid", @class = "", role = "form", autocomplete = "off", enctype = "multipart/form-data" }))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">
                        <table id="dataTable" class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Type Of Name</th>
                                    <th>Type Of Value</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>

                        <button id="addRow" class="btn btn-success">Add Row</button>
                    </div>

                    <div class="form-row pt-3">
                        <div class="form-group col-md-4 offset-4">
                            <input type="submit" id="btnsubmit" class="btn btn-primary" value="Submit" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="~/Scripts/JS/Master.js"></script>*@

    <script>
        $(document).ready(function () {
            let rowIndex = 0;

            // Function to fetch dropdown data
            function loadTypeOfNameDropdown(callback) {
                $.ajax({
                    url: "/Master/GetTypeOfNames", // Controller method
                    type: "GET",
                    success: function (data) {
                        let dropdownHtml = `<option value="">Select Type</option>`;
                        $.each(data, function (index, item) {
                            dropdownHtml += `<option value="${item.Value}">${item.Text}</option>`; // ✅ Using Text instead of ID
                        });
                        callback(dropdownHtml);
                    },
                    error: function () {
                        toastr.error("Error fetching TypeOfName data.");
                    }
                });
            }
            // Function to add a new row
            function addNewRow() {
                rowIndex++;
                loadTypeOfNameDropdown(function (dropdownOptions) {
                    let newRow = `
                                    <tr>
                                        <td>
                                            <select class="TypeOfName form-control" name="TypeOfName[]" id="TypeOfName_${rowIndex}">
                                                ${dropdownOptions}
                                            </select>
                                        </td>
                                        <td>
                                            <input type="text" class="TypeOfValue form-control" name="TypeOfValue[]" id="TypeOfValue_${rowIndex}" placeholder="Type Of Value">
                                        </td>
                                        <td>
                                            <button type="button" class="deleteRow btn btn-danger">Delete</button>
                                        </td>
                                    </tr>`;
                    $('#dataTable tbody').append(newRow);
                });
            }

            // Add first row on page load
            addNewRow();

            // Add row on button click
            $('#addRow').click(function (e) {
                e.preventDefault();
                addNewRow();
            });

            // Delete row
            $(document).on('click', '.deleteRow', function () {
                $(this).closest('tr').remove();
            });

            // Form Submission
            $("#formid").on("submit", function (event) {
                event.preventDefault();

                var tblcostdata = [];
                $('#dataTable tbody tr').each(function () {
                    // var TypeOfName = $(this).find("select.TypeOfName option:selected").text().trim(); // ✅ Correct way to get text
                    var TypeOfName = $(this).find("select.TypeOfName").val(); // ✅ Correct way to get text
                    var TypeOfValue = $(this).find("input.TypeOfValue").val().trim();

                    // Validate empty values
                    if (TypeOfName !== "" && TypeOfName !== "Select Type" && TypeOfValue !== "") {
                        tblcostdata.push({
                            TypeOfNameId: TypeOfName,
                            TypeOfValue: TypeOfValue
                        });
                    }
                });

                if (tblcostdata.length === 0) {
                    toastr.error("Please add at least one row with valid data.");
                    return;
                }

                var formData = new FormData(this);
                formData.append('tblcostdata', JSON.stringify(tblcostdata));

                if (confirm('Are you sure you want to submit the form?')) {
                    $.ajax({
                        type: "POST",
                        url: "/JD/JobD/",
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (resp) {
                            if (resp.success) {
                                toastr.success("Success", resp.message);
                                $("#formid")[0].reset();
                                $('#dataTable tbody').empty();
                                addNewRow(); // Re-add first row
                            } else {
                                toastr.error("Error", resp.message);
                            }
                        },
                        error: function (req, error) {
                            var errorMsg = req.statusText ? req.statusText : error;
                            toastr.error(`There was a communication error: ${errorMsg}`);
                        }
                    });
                }
            });
        });
    </script>
}
